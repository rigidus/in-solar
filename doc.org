#+STARTUP: showall indent hidestars

* Disclaimer

Этот документ создан как набор заметок, которые могут помочь (а могут и
помешать) разобраться в основных концепциях проекта Insolar.

Он может содержать фактические ошибки, неточности и даже прямую ложь в
отношении технических концепций, намерений разработчиков, сроков
реализации и сценариев использования. Используйте на свой страх и риск.

Я выкладываю его в свой частный репозиторий для целей совместного
редактирования, чтобы любое заинтересованное лицо могло вносить свои
уточнения.

Все написанное может не совпадать с позицией компании Insolar и является
частным мнением (или заблуждением) автора или контрибьюторов

* Overview
** Структура

Из чего состоит Insolar - это список концепций, каждую из которых нужно
рассмотреть.

- Platform Core
  - Network
    - Infrastructure Layer
    - Nodes
    - Pulses
    - Consensus
  - Ledger
    - Lifelines / sidelines - Последовательности записей, представляющих
      состояния объектов, которые создаются умными контрактами
    - jets / jet drops - логические единицы хранения, сформированные из lifelines
    - short/long term storage (for jets)
  - VM
  - Platform API
    - Smart Contracts API
    - Business Logic API
    - Observer API
  - Observer
- Business Foundations
  - Domains (supercontract)
    - Domain Rules
  - Toolkuts
- Applications
- External Services

** Принципы

- Everything is SmartContract
- One Executor - Many Validators
- Dynamic consensus: separation of network (nodes) and business
  (contracts) consensuses
- Use different blockchain styles to fit for purpose: one object-one
  chain for object’s lifeline and sidelines, sharded chains for block
  building, block-based chains for storage units
- Different roles (players) in the Insolar Ecosystem: resource providers,
  application developers, application consumers, Insolar
  Foundation. Different incentives & staking & liabilities

- Core:Network
-- Node roles
-- Pulses
-- Consensus (Optimized BFT)
- Core:Ledger
-- LightMaterial
-- HeavyMaterial
- Core:VM
-- Model One Executor - Many Validators
-- VM
-- Contracts
-- Requests
- Core:Platform-API
- Core:Observer
- Business-Foundation
-- Domains
-- Toolkits
- Applications

* С чего начать объяснять
** С кейсов

[TODO:gmm]

*** Документооборот

*** Transfer

Инициатором перевода денег является пользователь. Чтобы сделать перевод
он обращается к кошельку (~Wallet~), который является веб или мобильным
приложением.

Чтобы сделать перевод нужно:
- PrivKey
- Addr From
- Addr To

Wallet обращается к платформе через API, это называется ~Request~? На
самом деле он должен обратиться к одной из ~Node~ с ролью
~Virtual~. Тогда как он их получает, обновляет и т п?

~Node~ записывает ~Request~ куда?

К

** С обсервера и платформы (набора нод)
*** Collector
*** DB
*** API
** Дальше можно про роли нод (хранение и исполнение)

В данный момент в майнете может быть только один Heavy. Остальных сколько
угодно, но у нас пока по пять

Статические роли:
- Virtual (SmartContract Executor)
- LM
- HS
- Pulse

Динамические роли
- Executor
- Validator

По insolar-addr вычисляется Virtual Executor (VE) выбираемый из
ActiveList (динамический). ActiveList зависит от пульса - он формируется
на каждoм пульсе.

Пульс рассылается всем соседям

Отсюда мы переходим к объяснению консенсуса, но сначала:

** What is insolar-addr
** What is pulse

10 second таймслоты

На каждом пульсе:
- отправляется энтропия

*** Смена пульса

Все сложно

Jet-drops


** Consensus

4 фазы

** Discovery

На сетевом уровне

Список захардкожен в коде ноды

Как происходит добавление узлов - через дискавери
Как происходит удаление нод - она перестает отвечать на пульс или
убивается за злонамеренное поведение (еще возможны сценарии)

** Jet

Пусть у нас есть пространство контрактов 2^64 адресов
Если LME видит что данных для сохранения слишком много, то мы делим эти
данные пополам - это Jet.

** Доступ к данным

** Реквест

2 способа сформировать реквест

- из внешнего апи - запрос к кошельку
- запрос на перевод - от одной ноды к другой во время исполнения
  контракта

Реквесты сейвятся, и выполняются. Если реквест не выполнился, то его
довыполнят при этом порядок гарантируется

Транзакционный механизм

** Смартконтракт

это Go-класс, в котором есть поля, и эти поля хранятся на блокчейне как
связный список состояний - его вершина - текущее состояние

** Механизм валидации

сейчас нет.

** Конвейр (1)
Генерация документации в плантУМЛ с возможным анализом стейт-машин
Предложить технологию генерации доков

ну и соотв надо будет в этом разобраться и в первую очередь подумать, как
работать с документированием, чтобы большая часть описания оставалась в
коде

на уровне деклараций
и не надо было руками дублировать
а в идеале - если ещё можно будет анализировать структуру кода state
machine's и по нему рисовать PlantUml представления

как до кода доберёшься - расскажу суть происходящего в этом куске, и на
кой чёрт он нужен


** Филаменты

Объекты которые хранятся в JеtDrop

* Как запускатся нода

#+BEGIN_SRC sh
  + export INSOLAR_LOG_FORMATTER=
  + INSOLAR_LOG_FORMATTER=
  + export INSOLAR_LOG_LEVEL=debug
  + INSOLAR_LOG_LEVEL=debug
  discovery+other nodes: 5+0
  check_working_dir() starts ...
  check_working_dir() end.
  bootstrap start
  prepare() starts ...
  stop_listening(): starts ...
  stop_listening(): stop insgorund
  grep: .artifacts/launchnet/bootstrap.yaml: Нет такого файла или каталога
  grep: .artifacts/launchnet/keeperd.yaml: Нет такого файла или каталога
  killing process using port '58090'
  stop_listening() end.
  clear_dirs() starts ...
  + rm -rfv .artifacts/launchnet/discoverynodes/
  удален каталог '.artifacts/launchnet/discoverynodes/certs'
  удален каталог '.artifacts/launchnet/discoverynodes/'
  + rm -rfv .artifacts/launchnet/logs/
  удален каталог '.artifacts/launchnet/logs/insgorund'
  удален каталог '.artifacts/launchnet/logs/discoverynodes/4'
  удален каталог '.artifacts/launchnet/logs/discoverynodes/2'
  удален каталог '.artifacts/launchnet/logs/discoverynodes/5'
  удален каталог '.artifacts/launchnet/logs/discoverynodes/1'
  удален каталог '.artifacts/launchnet/logs/discoverynodes/3'
  удален каталог '.artifacts/launchnet/logs/discoverynodes'
  удален каталог '.artifacts/launchnet/logs/'
  + rm -rfv .artifacts/launchnet/contracts
  + rm -rfv .artifacts/launchnet/logs/discoverynodes/1
  + rm -rfv .artifacts/launchnet/logs/discoverynodes/2
  + rm -rfv .artifacts/launchnet/logs/discoverynodes/3
  + rm -rfv .artifacts/launchnet/logs/discoverynodes/4
  + rm -rfv .artifacts/launchnet/logs/discoverynodes/5
  create_required_dirs() starts ...
  + mkdir -p .artifacts/launchnet/discoverynodes/certs
  + mkdir -p .artifacts/launchnet/configs/
  + mkdir -p .artifacts/launchnet/logs/insgorund/
  + touch .artifacts/launchnet/configs/insgorund_ports.txt
  + mkdir -p .artifacts/launchnet/logs/discoverynodes/1
  + mkdir -p .artifacts/launchnet/logs/discoverynodes/2
  + mkdir -p .artifacts/launchnet/logs/discoverynodes/3
  + mkdir -p .artifacts/launchnet/logs/discoverynodes/4
  + mkdir -p .artifacts/launchnet/logs/discoverynodes/5
  create_required_dirs() end.
  prepare() end.
  build binaries
  + export BUILD_TAGS
  + make build
  mkdir -p bin
  go build -o bin/insolard -tags "debug functest" -ldflags "-X github.com/insolar/insolar/version.Version=v1.3.0-13-g63229f9de -X github.com/insolar/insolar/version.BuildNumber= -X github.com/insolar/insolar/version.BuildDate=2020-01-17 -X github.com/insolar/insolar/version.BuildTime=11:28:48 -X github.com/insolar/insolar/version.GitHash=63229f9de" cmd/insolard/*.go
  go build -o bin/insolar -tags "debug functest" -ldflags "-X github.com/insolar/insolar/version.Version=v1.3.0-13-g63229f9de -X github.com/insolar/insolar/version.BuildNumber= -X github.com/insolar/insolar/version.BuildDate=2020-01-17 -X github.com/insolar/insolar/version.BuildTime=11:28:48 -X github.com/insolar/insolar/version.GitHash=63229f9de" application/cmd/insolar/*.go
  go build -o bin/insgocc -ldflags "-X github.com/insolar/insolar/version.Version=v1.3.0-13-g63229f9de -X github.com/insolar/insolar/version.BuildNumber= -X github.com/insolar/insolar/version.BuildDate=2020-01-17 -X github.com/insolar/insolar/version.BuildTime=11:28:48 -X github.com/insolar/insolar/version.GitHash=63229f9de" application/cmd/insgocc/*.go
  go build -o bin/pulsard -ldflags "-X github.com/insolar/insolar/version.Version=v1.3.0-13-g63229f9de -X github.com/insolar/insolar/version.BuildNumber= -X github.com/insolar/insolar/version.BuildDate=2020-01-17 -X github.com/insolar/insolar/version.BuildTime=11:28:48 -X github.com/insolar/insolar/version.GitHash=63229f9de" cmd/pulsard/*.go
  go build -o bin/testpulsard -ldflags "-X github.com/insolar/insolar/version.Version=v1.3.0-13-g63229f9de -X github.com/insolar/insolar/version.BuildNumber= -X github.com/insolar/insolar/version.BuildDate=2020-01-17 -X github.com/insolar/insolar/version.BuildTime=11:28:48 -X github.com/insolar/insolar/version.GitHash=63229f9de" cmd/testpulsard/*.go
  CGO_ENABLED=1 go build -o bin/insgorund -ldflags "-X github.com/insolar/insolar/version.Version=v1.3.0-13-g63229f9de -X github.com/insolar/insolar/version.BuildNumber= -X github.com/insolar/insolar/version.BuildDate=2020-01-17 -X github.com/insolar/insolar/version.BuildTime=11:28:48 -X github.com/insolar/insolar/version.GitHash=63229f9de" cmd/insgorund/*.go
  go build -o bin/healthcheck -ldflags "-X github.com/insolar/insolar/version.Version=v1.3.0-13-g63229f9de -X github.com/insolar/insolar/version.BuildNumber= -X github.com/insolar/insolar/version.BuildDate=2020-01-17 -X github.com/insolar/insolar/version.BuildTime=11:28:48 -X github.com/insolar/insolar/version.GitHash=63229f9de" cmd/healthcheck/*.go
  go build -o bin/benchmark -ldflags "-X github.com/insolar/insolar/version.Version=v1.3.0-13-g63229f9de -X github.com/insolar/insolar/version.BuildNumber= -X github.com/insolar/insolar/version.BuildDate=2020-01-17 -X github.com/insolar/insolar/version.BuildTime=11:28:48 -X github.com/insolar/insolar/version.GitHash=63229f9de" application/cmd/benchmark/*.go
  go build -o bin/apirequester -ldflags "-X github.com/insolar/insolar/version.Version=v1.3.0-13-g63229f9de -X github.com/insolar/insolar/version.BuildNumber= -X github.com/insolar/insolar/version.BuildDate=2020-01-17 -X github.com/insolar/insolar/version.BuildTime=11:28:48 -X github.com/insolar/insolar/version.GitHash=63229f9de" cmd/apirequester/*.go
  go build -o bin/pulsewatcher -ldflags "-X github.com/insolar/insolar/version.Version=v1.3.0-13-g63229f9de -X github.com/insolar/insolar/version.BuildNumber= -X github.com/insolar/insolar/version.BuildDate=2020-01-17 -X github.com/insolar/insolar/version.BuildTime=11:28:48 -X github.com/insolar/insolar/version.GitHash=63229f9de" cmd/pulsewatcher/*.go
  go build -o bin/backupmanager -ldflags "-X github.com/insolar/insolar/version.Version=v1.3.0-13-g63229f9de -X github.com/insolar/insolar/version.BuildNumber= -X github.com/insolar/insolar/version.BuildDate=2020-01-17 -X github.com/insolar/insolar/version.BuildTime=11:28:48 -X github.com/insolar/insolar/version.GitHash=63229f9de" cmd/backupmanager/*.go
  go build -o bin/keeperd -ldflags "-X github.com/insolar/insolar/version.Version=v1.3.0-13-g63229f9de -X github.com/insolar/insolar/version.BuildNumber= -X github.com/insolar/insolar/version.BuildDate=2020-01-17 -X github.com/insolar/insolar/version.BuildTime=11:28:48 -X github.com/insolar/insolar/version.GitHash=63229f9de" cmd/keeperd/*.go
  go build -o bin/heavy-badger ./cmd/heavy-badger/
  generate pulsar keys: .artifacts/launchnet/configs/pulsar_keys.json
  generate members keys in dir: .artifacts/launchnet/configs/
  generate configs
  + go run -mod=vendor scripts/generate_insolar_configs.go -p .artifacts/launchnet/configs/insgorund_ports.txt
  generate_insolar_configs.go: creates dir .artifacts/launchnet
  generate_insolar_configs.go: write to file .artifacts/launchnet/bootstrap.yaml
  generate_insolar_configs.go: write to file .artifacts/launchnet/prometheus.yaml
  generate_insolar_configs.go: writeInsolardConfigs...
  generate_insolar_configs.go: creates dir .artifacts/launchnet/discoverynodes/1
  generate_insolar_configs.go: write to file .artifacts/launchnet/discoverynodes/1/insolard.yaml
  generate_insolar_configs.go: creates dir .artifacts/launchnet/discoverynodes/2
  generate_insolar_configs.go: write to file .artifacts/launchnet/discoverynodes/2/insolard.yaml
  generate_insolar_configs.go: creates dir .artifacts/launchnet/discoverynodes/3
  generate_insolar_configs.go: write to file .artifacts/launchnet/discoverynodes/3/insolard.yaml
  generate_insolar_configs.go: creates dir .artifacts/launchnet/discoverynodes/4
  generate_insolar_configs.go: write to file .artifacts/launchnet/discoverynodes/4/insolard.yaml
  generate_insolar_configs.go: creates dir .artifacts/launchnet/discoverynodes/5
  generate_insolar_configs.go: write to file .artifacts/launchnet/discoverynodes/5/insolard.yaml
  generate_insolar_configs.go: writeInsolardConfigs...
  generate_insolar_configs.go: write to file .artifacts/launchnet/configs/insgorund_ports.txt
  generate_insolar_configs.go: write to file .artifacts/launchnet/pulsar.yaml
  generate_insolar_configs.go: write to file .artifacts/launchnet/keeperd.yaml
  generate_insolar_configs.go: creates dir .artifacts/launchnet
  generate_insolar_configs.go: write to file .artifacts/launchnet/pulsewatcher.yaml
  generate migration addresses: .artifacts/launchnet/configs/migration_addresses.json
  start bootstrap ...
  + bin/insolar bootstrap --config=.artifacts/launchnet/bootstrap.yaml --certificates-out-dir=.artifacts/launchnet/discoverynodes/certs
  + GENESIS_EXIT_CODE=0
  bootstrap log: .artifacts/launchnet/logs/bootstrap.log
  bootstrap is done
  copy_certs() starts ...
  + cp -v .artifacts/launchnet/discoverynodes/certs/discovery_cert_1.json .artifacts/launchnet/discoverynodes/1/cert.json
  '.artifacts/launchnet/discoverynodes/certs/discovery_cert_1.json' -> '.artifacts/launchnet/discoverynodes/1/cert.json'
  + cp -v .artifacts/launchnet/discoverynodes/certs/discovery_cert_2.json .artifacts/launchnet/discoverynodes/2/cert.json
  '.artifacts/launchnet/discoverynodes/certs/discovery_cert_2.json' -> '.artifacts/launchnet/discoverynodes/2/cert.json'
  + cp -v .artifacts/launchnet/discoverynodes/certs/discovery_cert_3.json .artifacts/launchnet/discoverynodes/3/cert.json
  '.artifacts/launchnet/discoverynodes/certs/discovery_cert_3.json' -> '.artifacts/launchnet/discoverynodes/3/cert.json'
  + cp -v .artifacts/launchnet/discoverynodes/certs/discovery_cert_4.json .artifacts/launchnet/discoverynodes/4/cert.json
  '.artifacts/launchnet/discoverynodes/certs/discovery_cert_4.json' -> '.artifacts/launchnet/discoverynodes/4/cert.json'
  + cp -v .artifacts/launchnet/discoverynodes/certs/discovery_cert_5.json .artifacts/launchnet/discoverynodes/5/cert.json
  '.artifacts/launchnet/discoverynodes/certs/discovery_cert_5.json' -> '.artifacts/launchnet/discoverynodes/5/cert.json'
  copy_certs() end.
  kill all processes: insgorund, insolard, pulsard
  insgorund: процесс не найден
  insolard: процесс не найден
  pulsard: процесс не найден
  start pulsar ...
     log: .artifacts/launchnet/logs/pulsar_output.log
  + mkdir -p .artifacts/launchnet/pulsar_data
  pulsar log: .artifacts/launchnet/logs/pulsar_output.log
  + bin/pulsard -c .artifacts/launchnet/pulsar.yaml
  launch_keeperd() starts ...
  launch_keeperd() end.
  start insgorund ...
  start heavy node
  heavy node started in background
  log: .artifacts/launchnet/logs/discoverynodes/1/output.log
  start discovery nodes ...
  + tee .artifacts/launchnet/logs/discoverynodes/1/output.log
  + bin/insolard --config .artifacts/launchnet/discoverynodes/1/insolard.yaml --heavy-genesis .artifacts/launchnet/configs/heavy_genesis.json
  [1]   Запущен          ${PULSARD} -c ${PULSAR_CONFIG} &> ${LAUNCHNET_LOGS_DIR}pulsar_output.log &
  [2]   Запущен          ${KEEPERD} --config=${KEEPERD_CONFIG} &> ${KEEPERD_LOG} &
  [3]   Запущен          ${INSGORUND} -l ${host}:${listen_port} --rpc ${host}:${rpc_port} --log-level=${GORUND_LOG_LEVEL} --metrics :${metrics_port} &> ${INSGORUND_LOGS}${rpc_port}.log &
  [4]-  Запущен          ${INSGORUND} -l ${host}:${listen_port} --rpc ${host}:${rpc_port} --log-level=${GORUND_LOG_LEVEL} --metrics :${metrics_port} &> ${INSGORUND_LOGS}${rpc_port}.log &
  [5]+  Запущен          $INSOLARD --config ${DISCOVERY_NODES_DATA}1/insolard.yaml --heavy-genesis ${HEAVY_GENESIS_CONFIG_FILE} 2>&1 | ${LOGROTATOR} ${DISCOVERY_NODE_LOGS}1/output.log > /dev/null &
  someone left the network
  discovery node 2 started in background
  log: .artifacts/launchnet/logs/discoverynodes/2/output.log
  + bin/insolard --config .artifacts/launchnet/discoverynodes/2/insolard.yaml
  + tee .artifacts/launchnet/logs/discoverynodes/2/output.log
  discovery node 3 started in background
  log: .artifacts/launchnet/logs/discoverynodes/3/output.log
  + tee .artifacts/launchnet/logs/discoverynodes/3/output.log
  discovery node 4 started in background
  log: .artifacts/launchnet/logs/discoverynodes/4/output.log
  + bin/insolard --config .artifacts/launchnet/discoverynodes/3/insolard.yaml
  discovery node 5 started in background
  log: .artifacts/launchnet/logs/discoverynodes/5/output.log
  + tee .artifacts/launchnet/logs/discoverynodes/4/output.log
  discovery nodes started ...
  starting pulse watcher...
  bin/pulsewatcher -c .artifacts/launchnet/pulsewatcher.yaml
  + bin/insolard --config .artifacts/launchnet/discoverynodes/4/insolard.yaml
  + tee .artifacts/launchnet/logs/discoverynodes/5/output.log
  + bin/insolard --config .artifacts/launchnet/discoverynodes/5/insolard.yaml

     URL   |        STATE         |       ID       | NETWORK PULSE |     PULSE     |    ACTIVE    | WORKING |      ROLE       |    TIMESTAMP    | UPTIME | ERROR
  +--------+----------------------+----------------+---------------+---------------+--------------+---------+-----------------+-----------------+--------+-------+
    :19001 | CompleteNetworkState |  😈 992962443  |      33020724 |      33020724 | 5 ⚽🏀😆😀😈 |       5 | Heavy           | 13:13:17.378508 | 49m30s |
    :19002 | CompleteNetworkState |  ⚽ 3309296920 |      33020724 |      33020724 | 5 ⚽🏀😆😀😈 |       5 | Virtual         | 13:13:17.378548 | 49m30s |
    :19003 | CompleteNetworkState |  😀 114004987  |      33020724 |      33020724 | 5 ⚽🏀😆😀😈 |       5 | Light           | 13:13:17.378511 | 49m30s |
    :19004 | CompleteNetworkState |  🏀 1505477843 |      33020724 |      33020724 | 5 ⚽🏀😆😀😈 |       5 | Virtual         | 13:13:17.378509 | 49m30s |
    :19005 | CompleteNetworkState |  😆 1846903875 |      33020724 |      33020724 | 5 ⚽🏀😆😀😈 |       5 | Light           | 13:13:17.378508 | 49m30s |
  +--------+----------------------+----------------+---------------+---------------+--------------+---------+-----------------+-----------------+--------+-------+
                                                                     INSOLAR STATE |    READY     |  TIME   | 13:13:17.379047 | INSOLAR UPTIME  | 49M30S |
                                                                   +---------------+--------------+---------+-----------------+-----------------+--------+-------+
  ^Cstop_listening(): starts ...
  stop_listening(): stop insgorund
  scripts/insolard/launchnet.sh: строка 126: предупреждение: run_pending_traps: неверное значение в trap_list[17]: 0x559db1372870
  scripts/insolard/launchnet.sh: строка 117: предупреждение: run_pending_traps: неверное значение в trap_list[17]: 0x559db1372870
  scripts/insolard/launchnet.sh: строка 127: предупреждение: run_pending_traps: неверное значение в trap_list[17]: 0x559db1372870
  scripts/insolard/launchnet.sh: строка 117: предупреждение: run_pending_traps: неверное значение в trap_list[17]: 0x559db1372870
  scripts/insolard/launchnet.sh: строка 126: предупреждение: run_pending_traps: неверное значение в trap_list[17]: 0x559db1372870
  scripts/insolard/launchnet.sh: строка 117: предупреждение: run_pending_traps: неверное значение в trap_list[17]: 0x559db1372870
  scripts/insolard/launchnet.sh: строка 127: предупреждение: run_pending_traps: неверное значение в trap_list[17]: 0x559db1372870
  scripts/insolard/launchnet.sh: строка 117: предупреждение: run_pending_traps: неверное значение в trap_list[17]: 0x559db1372870
  scripts/insolard/launchnet.sh: строка 132: предупреждение: run_pending_traps: неверное значение в trap_list[17]: 0x559db1372870
  scripts/insolard/launchnet.sh: строка 117: предупреждение: run_pending_traps: неверное значение в trap_list[17]: 0x559db1372870
  scripts/insolard/launchnet.sh: строка 136: предупреждение: run_pending_traps: неверное значение в trap_list[17]: 0x559db1372870
  scripts/insolard/launchnet.sh: строка 117: предупреждение: run_pending_traps: неверное значение в trap_list[17]: 0x559db1372870
  scripts/insolard/launchnet.sh: строка 137: предупреждение: run_pending_traps: неверное значение в trap_list[17]: 0x559db1372870
  scripts/insolard/launchnet.sh: строка 117: предупреждение: run_pending_traps: неверное значение в trap_list[17]: 0x559db1372870
  killing process using port '58090'
  scripts/insolard/launchnet.sh: строка 97: предупреждение: run_pending_traps: неверное значение в trap_list[17]: 0x559db1372870
  scripts/insolard/launchnet.sh: строка 95: предупреждение: run_pending_traps: неверное значение в trap_list[17]: 0x559db1372870
  killing process using port '58090'
  scripts/insolard/launchnet.sh: строка 97: предупреждение: run_pending_traps: неверное значение в trap_list[17]: 0x559db1372870
  scripts/insolard/launchnet.sh: строка 95: предупреждение: run_pending_traps: неверное значение в trap_list[17]: 0x559db1372870
  killing process using port '33305'
  scripts/insolard/launchnet.sh: строка 97: предупреждение: run_pending_traps: неверное значение в trap_list[17]: 0x559db1372870
  scripts/insolard/launchnet.sh: строка 95: предупреждение: run_pending_traps: неверное значение в trap_list[17]: 0x559db1372870
  killing pid 7805 at Пт янв 17 13:13:18 MSK 2020
  scripts/insolard/launchnet.sh: строка 98: предупреждение: run_pending_traps: неверное значение в trap_list[17]: 0x559db1372870
  killing process using port '33306'
  scripts/insolard/launchnet.sh: строка 97: предупреждение: run_pending_traps: неверное значение в trap_list[17]: 0x559db1372870
  scripts/insolard/launchnet.sh: строка 95: предупреждение: run_pending_traps: неверное значение в trap_list[17]: 0x559db1372870
  killing pid 7834 at Пт янв 17 13:13:18 MSK 2020
  scripts/insolard/launchnet.sh: строка 98: предупреждение: run_pending_traps: неверное значение в trap_list[17]: 0x559db1372870
  killing process using port '33327'
  scripts/insolard/launchnet.sh: строка 97: предупреждение: run_pending_traps: неверное значение в trap_list[17]: 0x559db1372870
  scripts/insolard/launchnet.sh: строка 95: предупреждение: run_pending_traps: неверное значение в trap_list[17]: 0x559db1372870
  killing pid 7824 at Пт янв 17 13:13:18 MSK 2020
  scripts/insolard/launchnet.sh: строка 98: предупреждение: run_pending_traps: неверное значение в trap_list[17]: 0x559db1372870
  killing process using port '33328'
  scripts/insolard/launchnet.sh: строка 97: предупреждение: run_pending_traps: неверное значение в trap_list[17]: 0x559db1372870
  scripts/insolard/launchnet.sh: строка 95: предупреждение: run_pending_traps: неверное значение в trap_list[17]: 0x559db1372870
  killing pid 7838 at Пт янв 17 13:13:18 MSK 2020
  scripts/insolard/launchnet.sh: строка 98: предупреждение: run_pending_traps: неверное значение в trap_list[17]: 0x559db1372870
  killing process using port '7805'
  scripts/insolard/launchnet.sh: строка 97: предупреждение: run_pending_traps: неверное значение в trap_list[17]: 0x559db1372870
  scripts/insolard/launchnet.sh: строка 95: предупреждение: run_pending_traps: неверное значение в trap_list[17]: 0x559db1372870
  killing process using port '7824'
  scripts/insolard/launchnet.sh: строка 97: предупреждение: run_pending_traps: неверное значение в trap_list[17]: 0x559db1372870
  scripts/insolard/launchnet.sh: строка 95: предупреждение: run_pending_traps: неверное значение в trap_list[17]: 0x559db1372870
  stop_listening() end.
  kill all processes: insgorund, insolard, pulsard
  insgorund: процесс не найден
  scripts/insolard/launchnet.sh: строка 107: предупреждение: run_pending_traps: неверное значение в trap_list[17]: 0x559db1372870
  scripts/insolard/launchnet.sh: строка 107: предупреждение: run_pending_traps: неверное значение в trap_list[17]: 0x559db1372870
  scripts/insolard/launchnet.sh: строка 107: предупреждение: run_pending_traps: неверное значение в trap_list[17]: 0x559db1372870
  FINISHING ...
  stop_listening(): starts ...
  stop_listening(): stop insgorund
  [1]   Завершён        ${PULSARD} -c ${PULSAR_CONFIG} &> ${LAUNCHNET_LOGS_DIR}pulsar_output.log
  [3]   Завершён        ${INSGORUND} -l ${host}:${listen_port} --rpc ${host}:${rpc_port} --log-level=${GORUND_LOG_LEVEL} --metrics :${metrics_port} &> ${INSGORUND_LOGS}${rpc_port}.log
  [4]   Завершён        ${INSGORUND} -l ${host}:${listen_port} --rpc ${host}:${rpc_port} --log-level=${GORUND_LOG_LEVEL} --metrics :${metrics_port} &> ${INSGORUND_LOGS}${rpc_port}.log
  [6]   Запущен          $INSOLARD --config ${DISCOVERY_NODES_DATA}${i}/insolard.yaml 2>&1 | ${LOGROTATOR} ${DISCOVERY_NODE_LOGS}${i}/output.log > /dev/null &
  [7]   Завершён        $INSOLARD --config ${DISCOVERY_NODES_DATA}${i}/insolard.yaml 2>&1 | ${LOGROTATOR} ${DISCOVERY_NODE_LOGS}${i}/output.log > /dev/null
  [8]-  Запущен          $INSOLARD --config ${DISCOVERY_NODES_DATA}${i}/insolard.yaml 2>&1 | ${LOGROTATOR} ${DISCOVERY_NODE_LOGS}${i}/output.log > /dev/null &
  [9]+  Завершён        $INSOLARD --config ${DISCOVERY_NODES_DATA}${i}/insolard.yaml 2>&1 | ${LOGROTATOR} ${DISCOVERY_NODE_LOGS}${i}/output.log > /dev/null
  someone left the network
  someone left the network
  someone left the network
  someone left the network
  someone left the network
  someone left the network
  someone left the network
  someone left the network
  killing process using port '58090'
  someone left the network
  killing process using port '58090'
  someone left the network
  killing process using port '33305'
  someone left the network
  killing process using port '33306'
  someone left the network
  killing pid 7834 at Пт янв 17 13:13:18 MSK 2020
  someone left the network
  killing process using port '33327'
  [5]   Завершён        $INSOLARD --config ${DISCOVERY_NODES_DATA}1/insolard.yaml --heavy-genesis ${HEAVY_GENESIS_CONFIG_FILE} 2>&1 | ${LOGROTATOR} ${DISCOVERY_NODE_LOGS}1/output.log > /dev/null
  someone left the network
  someone left the network
  someone left the network
  killing process using port '33328'
  someone left the network
  killing pid 7838 at Пт янв 17 13:13:18 MSK 2020
  someone left the network
  killing process using port '7805'
  someone left the network
  killing process using port '7824'
  someone left the network
  killing process using port '58090'
  someone left the network
  killing process using port '33305'
  someone left the network
  killing process using port '33306'
  someone left the network
  killing pid 7834 at Пт янв 17 13:13:18 MSK 2020
  someone left the network
  killing process using port '33327'
  someone left the network
  killing process using port '33328'
  someone left the network
  killing pid 7838 at Пт янв 17 13:13:18 MSK 2020
  someone left the network
  stop_listening() end.
  kill all processes: insgorund, insolard, pulsard
  insgorund: процесс не найден
  someone left the network
  someone left the network
  pulsard: процесс не найден
  someone left the network
#+END_SRC
* Мои задачи
** Собрать документацию используя GoDoc
** Собрать PlantUML диаграммы используя семантический анализ кода
* Что делать
** Настроить GoModules в GoLand

File->Settings->GoModules->EnableGoModules(vgo)Integration:=true

** Настроить go-mode в emacs
** Настроить ClickToGo
** Запускать и анализировать тесты

Запускать тесты можно прямо из GoLand но надо разобраться как они
работают из CLI

** Добавить логгер

Добавить адаптер в ~/conveyer/smashine/main.go~.

и перезагрузить среду(?)

получается следующий diff для go.mod (этот файл в .gitignore):

#+BEGIN_SRC
  diff --git a/ledger-core/v2/go.mod b/ledger-core/v2/go.mod
  index 9754299..ab17280 100644
  --- a/ledger-core/v2/go.mod
  +++ b/ledger-core/v2/go.mod
  @@ -4,11 +4,8 @@ go 1.12

   require (
          contrib.go.opencensus.io/exporter/prometheus v0.1.0
  -       github.com/AndreasBriese/bbloom v0.0.0-20190825152654-46b345b51c96 // indirect
          github.com/ThreeDotsLabs/watermill v1.0.2
  -       github.com/beorn7/perks v1.0.1 // indirect
          github.com/cheggaaa/pb/v3 v3.0.1
  -       github.com/codahale/hdrhistogram v0.0.0-20161010025455-3a0bb77429bd // indirect
          github.com/dgraph-io/badger v1.6.0-rc1.0.20191024172150-efb9d9d15d7f
          github.com/dustin/go-humanize v1.0.0
          github.com/fortytw2/leaktest v1.3.0
  @@ -23,36 +20,24 @@ require (
          github.com/grpc-ecosystem/grpc-gateway v1.9.6
          github.com/hashicorp/golang-lru v0.5.3
          github.com/insolar/component-manager v0.2.1-0.20191028200619-751a91771d2f
  -       github.com/insolar/go-actors v0.0.0-20190805151516-2fcc7bfc8ff9 // indirect
  +       github.com/insolar/insolar v1.3.0 // indirect
          github.com/insolar/rpc v1.2.2-0.20190812143745-c27e1d218f1f
          github.com/insolar/x-crypto v0.0.0-20191031140942-75fab8a325f6
          github.com/jbenet/go-base58 v0.0.0-20150317085156-6237cf65f3a6
  -       github.com/kardianos/osext v0.0.0-20190222173326-2bc1f35cddc0 // indirect
  -       github.com/magiconair/properties v1.8.1 // indirect
  -       github.com/mattn/go-colorable v0.1.4 // indirect
  -       github.com/mattn/go-isatty v0.0.9 // indirect
          github.com/olekukonko/tablewriter v0.0.1
          github.com/onrik/gomerkle v1.0.0
          github.com/opentracing/opentracing-go v1.1.0
  -       github.com/pelletier/go-toml v1.4.0 // indirect
          github.com/pkg/errors v0.8.1
          github.com/prometheus/client_golang v1.0.0
  -       github.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4 // indirect
  -       github.com/prometheus/common v0.6.0 // indirect
  -       github.com/prometheus/procfs v0.0.4 // indirect
          github.com/rs/zerolog v1.15.0
          github.com/satori/go.uuid v1.2.1-0.20181028125025-b2ce2384e17b
  -       github.com/spf13/afero v1.2.2 // indirect
          github.com/spf13/cobra v0.0.5
          github.com/spf13/jwalterweatherman v1.1.0
          github.com/spf13/pflag v1.0.3
          github.com/spf13/viper v1.4.0
          github.com/stretchr/testify v1.4.0
          github.com/tylerb/gls v0.0.0-20150407001822-e606233f194d
  -       github.com/tylerb/is v2.1.4+incompatible // indirect
  -       github.com/uber-go/atomic v1.4.0 // indirect
          github.com/uber/jaeger-client-go v2.19.0+incompatible
  -       github.com/uber/jaeger-lib v2.2.0+incompatible // indirect
          github.com/ugorji/go v1.1.4
          go.opencensus.io v0.22.0
          golang.org/x/crypto v0.0.0-20190820162420-60c769a6c586
  @@ -60,7 +45,6 @@ require (
          golang.org/x/sync v0.0.0-20190423024810-112230192c58
          golang.org/x/sys v0.0.0-20190826190057-c7b8b68b1456
          golang.org/x/tools v0.0.0-20190827205025-b29f5f60c37a
  -       gonum.org/v1/gonum v0.0.0-20191018104224-74cb7b153f2c // indirect
          google.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55
          google.golang.org/grpc v1.21.0
          gopkg.in/yaml.v2 v2.2.7
#+END_SRC

#+BEGIN_SRC go
  sm := smachine.NewSlotMachine(smachine.SlotMachineConfig{
  	SlotPageSize:         1000,
  	PollingPeriod:        10 * time.Millisecond,
  	PollingTruncate:      1 * time.Microsecond,
  	BoostNewSlotDuration: 10 * time.Millisecond,
  	ScanCountLimit:       scanCountLimit,
  	SlotMachineLogger:    nil, // TODO put logger adapter here
  }, signal.NextBroadcast, signal.NextBroadcast, nil)
#+END_SRC

Логгер даст трассу работы

Потом можно добавлять вызов логгера в каждое состояние. Например, в файле
~conveyor/smachine/main/example/example_1.go~ внутри func (s
*StateMachine1) ~State1(ctx smachine.ExecutionContext) smachine.StateUpdate~

** Написать use-case и smachine для него
